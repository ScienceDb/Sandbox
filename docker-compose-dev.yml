version: "3.7"

services:
  sdb_postgres:
    container_name: ISA-demo_postgres
    build:
      context: .
      dockerfile: Dockerfile.postgres
    volumes:
      - sdb_db_data:/var/lib/postgresql/data
    networks:
      - backend

  sdb_science_db_graphql_server:
    container_name: ISA-demo_graphql-server
    depends_on:
      - sdb_postgres
    build:
      context: ./graphql-server
      dockerfile: Dockerfile.graphql_server
    # Using ports in this way is a security concern. Please consider using e.g. a reverseproxy
    ports: 
      - 3000:3000
    environment:
      PORT: "3000"
      JQ_PATH: /usr/bin/jq
      NODE_JQ_SKIP_INSTALL_BINARY: "true"
      ## modifiable environment variables. Uncomment and set or export the needed environment settings.
      # LIMIT_RECORDS : ${LIMIT_RECORDS:-10000}
      REQUIRE_SIGN_IN: "false" 
      # ALLOW_ORIGIN: ${ALLOW_ORIGIN:-"http://localhost:8080"}
      # JWT_SECRET: ${JWT_SECRET:-"something-secret"}
      # SALT_ROUNDS: ${SALT_ROUNDS:-10} 
      # MAX_TIME_OUT: ${MAX_TIME_OUT:-2000}
      # POST_REQUEST_MAX_BODY_SIZE: ${POST_REQUEST_MAX_BODY_SIZE:-"1mb"}
      # ERROR_LOG: ${ERROR_LOG:-"compact"}
      # MAIL_SERVICE: ${MAIL_SERVICE:-"gmail"}
      # MAIL_HOST: ${MAIL_HOST:-"smtp.gmail.com"}
      # MAIL_ACCOUNT: ${MAIL_ACCOUNT:-"sci.db.service@gmail.com"}
      # MAIL_PASSWORD: ${MAIL_PASSWORD:-"SciDbServiceQAZ"}
      # EXPORT_TIME_OUT: ${EXPORT_TIME_OUT:-3600}
    volumes:
      - .:/usr/ScienceDbStarterPack
      # Use the Sequelize config adjusted for the Docker setup of ScienceDbStarterPack:
      - ./graphql-server/config/config_postgres_docker.json:/usr/ScienceDbStarterPack/graphql-server/config/config.json
    networks:
      - backend
    # Await POSTGRES role and DB creation, migrate schema, then start web
    # server:
    command:
      - /bin/sh
      - -c
      - |
        npm install --save
        ./migrateDbAndStartServer.sh

  sdb_science_db_app_server:
    container_name: ISA-demo_spa
    # Workaround. See https://github.com/facebook/create-react-app/issues/8688
    stdin_open: true
    depends_on:
      - sdb_postgres
      - sdb_science_db_graphql_server
    build:
      context: ./single-page-app
      dockerfile: Dockerfile.app
    # Using ports in this way is a security concern. Please consider using e.g. a reverseproxy
    ports:
      - 8080:8080
    environment:
      - PORT=8080
      - REACT_APP_ZENDRO_GRAPHQL_SERVER_URL=http://localhost:3000/graphql
      - REACT_APP_ZENDRO_LOGIN_URL=http://localhost:3000/login
      - REACT_APP_ZENDRO_EXPORT_URL=http://localhost:3000/export
      - REACT_APP_ZENDRO_MAX_UPLOAD_SIZE=500
    volumes:
      - .:/usr/ScienceDbStarterPack
    # Install dependencies and start single-page-app-server in development
    # mode.
    command:
      - /bin/sh
      - -c
      - |
        npm install
        npm run serve

  # sdb_graphiql:
  #   container_name: ISA-demo_graphiql-auth
  #   depends_on:
  #     - sdb_postgres
  #     - sdb_science_db_graphql_server
  #   build:
  #     context: ./graphiql-auth
  #     dockerfile: Dockerfile
  #   # Using ports in this way is a security concern. Please consider using e.g. a reverseproxy
  #   ports:
  #     - 7000:7000
  #   environment:
  #     - REACT_APP_SERVER_URL=http://localhost:3000/graphql
  #     - REACT_APP_LOGIN_URL=http://localhost:3000/login
  #     - PORT=7000
  #   volumes:
  #     - .:/usr/ScienceDbStarterPack
  #   # Install dependencies and start single-page-app-server in development
  #   # mode.
  #   networks:
  #     - backend
  #   command:
  #     - /bin/sh
  #     - -c
  #     - |
  #       npm install
  #       npm start
   

volumes:
  sdb_db_data:

networks:
  backend:
