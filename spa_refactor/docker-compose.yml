version: "3.8"

services:

  db_postgres:
    container_name: pgdb
    restart: unless-stopped
    image: postgres:13-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./initUserDb.sql:/docker-entrypoint-initdb.d/initUserDb.sql
      - ../data-generator:/mnt/datasets
    networks:
     - backend

  graphql_server:
    container_name: graphql_server
    restart: unless-stopped
    depends_on:
      - db_postgres
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ../graphql-server:/usr/src/app
      - ./storage_config.json:/usr/src/app/config/data_models_storage_config.json
      - ./seedUserDb.sql:/usr/src/seedUserDb.sql
      - ./migrateDbAndStartServer.sh:/usr/src/app/migrateDbAndStartServer.sh
      - .env:/usr/src/app/.env
    environment:
      JQ_PATH: /usr/bin/jq
      LIMIT_RECORDS: 10000
      PGPASSWORD: zendro
      PORT: "3002"
      REQUIRE_SIGN_IN: "false"
    labels:
      traefik.enable: "true"
      traefik.backend: "graphql_server"
      traefik.frontend.rule: "Host:graphql.zendro-dev.org"
      traefik.docker.network: "reverseproxy"
      traefik.port: "3002"
    networks:
      - backend
      - reverseproxy
    command:
      - /bin/sh
      - -c
      - |
        ./migrateDbAndStartServer.sh

  # spa:
  #   stdin_open: true
  #   container_name: spa
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ../single-page-app:/usr/src/app
  #   environment:
  #     PORT: "8082"
  #     JQ_PATH: /usr/bin/jq
  #     REACT_APP_ZENDRO_MAX_RECORD_LIMIT: 100
  #     REACT_APP_ZENDRO_GRAPHQL_SERVER_URL: http://graphql.zendro-dev.org/graphql
  #     REACT_APP_ZENDRO_LOGIN_URL: http://graphql.zendro-dev.org/login
  #     REACT_APP_ZENDRO_EXPORT_URL: http://graphql.zendro-dev.org/export
  #     REACT_APP_ZENDRO_MAX_UPLOAD_SIZE: 500
  #  labels:
  #     traefik.enable: "true"
  #     traefik.backend: "spa"
  #     traefik.frontend.rule: "Host:spa.zendro-dev.org"
  #     traefik.docker.network: "reverseproxy"
  #     traefik.port: "8082"
  #   networks:
  #     - reverseproxy
  #   command:
  #     - /bin/sh
  #     - -c
  #     - |
  #       npm start


  graphiqlauth:
    container_name: graphiqlauth
    restart: unless-stopped
    stdin_open: true
    depends_on:
      - db_postgres
      - graphql_server
    build:
      context: .
      dockerfile: Dockerfile.graphiql
    environment:
      REACT_APP_SERVER_URL: "http://graphql.zendro-dev.org/graphql"
      REACT_APP_LOGIN_URL: "http://graphql.zendro-dev.org/login"
      PORT: "7002"
    networks:
      - backend
      - reverseproxy
    labels:
      traefik.enable: "true"
      traefik.backend: "graphiqlauth"
      traefik.frontend.rule: "Host:graphiql.zendro-dev.org"
      traefik.docker.network: "reverseproxy"
      traefik.port: "7002"
    volumes:
      - ../graphiql-auth:/usr/src/app
    command:
      - /bin/sh
      - -c
      - |
        npm install
        npm start

networks:
  backend:
  reverseproxy:
    external: true
