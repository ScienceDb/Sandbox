version: "3.7"

services:
  sdb_postgres:
    container_name: sdb_postgres
    build:
      context: .
      dockerfile: Dockerfile.postgres
    volumes:
      - sdb_db_data:/var/lib/postgresql/data
    networks:
      - backend
    restart: unless-stopped

  sdb_science_db_graphql_server:
    container_name: sdb_science_db_graphql_server
    depends_on:
      - sdb_postgres
    build:
      context: ./graphql-server
      dockerfile: Dockerfile.graphql_server
    environment:
      - PORT=3000
      - REQUIRE_SIGN_IN=true
    volumes:
      - .:/usr/ScienceDbStarterPack
      # Use the Sequelize config adjusted for the Docker setup of ScienceDbStarterPack:
      - ./graphql-server/config/config_postgres_docker.json:/usr/ScienceDbStarterPack/graphql-server/config/config.json
    networks:
      - backend
      - reverseproxy
    # Await POSTGRES role and DB creation, migrate schema, then start web
    # server:
    command:
      - /bin/sh
      - -c
      - |
        npm install
        ./migrateDbAndStartServer.sh
    labels:
      traefik.enable: "true"
      traefik.backend: "sdb_science_db_graphql_server"
      traefik.frontend.rule: "Host:api.breedpath-db.org"
      traefik.docker.network: "reverseproxy"
      traefik.port: "3000"
    restart: unless-stopped

  sdb_science_db_app_server:
    container_name: sdb_science_db_app_server
    depends_on:
      - sdb_postgres
      - sdb_science_db_graphql_server
    build:
      context: ./single-page-app
      dockerfile: Dockerfile.app
    environment:
      - PORT=8080
      - REACT_APP_CENZ_GRAPHQL_SERVER_URL=http://api.breedpath-db.org/graphql
      - REACT_APP_CENZ_LOGIN_URL=http://api.breedpath-db.org/login
      - REACT_APP_CENZ_EXPORT_URL=http://api.breedpath-db.org/export
      - REACT_APP_CENZ_MAX_UPLOAD_SIZE=2000
    volumes:
      - .:/usr/ScienceDbStarterPack
    networks:
      - reverseproxy
    # Install dependencies and start single-page-app-server in development
    # mode.
    command:
      - /bin/sh
      - -c
      - |
        npm install
        npm start
    labels:
      traefik.enable: "true"
      traefik.backend: "sdb_science_db_app_server"
      traefik.frontend.rule: "Host:spa.breedpath-db.org"
      traefik.docker.network: "reverseproxy"
      traefik.port: "8080"
    restart: unless-stopped

  sdb_graphiql:
    depends_on:
      - sdb_postgres
      - sdb_science_db_graphql_server
    build:
      context: ./graphiql-auth
      dockerfile: Dockerfile
    environment:
      - REACT_APP_SERVER_URL=http://api.breedpath-db.org/graphql
      - REACT_APP_LOGIN_URL=http://api.breedpath-db.org/login
      - PORT=7000
    volumes:
      - .:/usr/ScienceDbStarterPack
    # Install dependencies and start single-page-app-server in development
    # mode.
    command:
      - /bin/sh
      - -c
      - |
        npm install
        npm start
    restart: unless-stopped
    labels:
      traefik.enable: "true"
      traefik.backend: "sdb_graphiql"
      traefik.frontend.rule: "Host:graphiql.breedpath-db.org"
      traefik.docker.network: "reverseproxy"
      traefik.port: "7000"
    networks:
      - backend
      - reverseproxy

  #sdb_minio:
  #  image: minio/minio:RELEASE.2019-02-20T22-44-29Z
  #  volumes:
  #    - sdb_minio_data:/data
  #  ports:
  #    - "9000:9000"
  #  environment:
  #    MINIO_ACCESS_KEY: sciencedb
  #    MINIO_SECRET_KEY: sciencedb
  #  command: server /data

volumes:
  sdb_db_data:
  #sdb_minio_data:

networks:
  reverseproxy:
    external: true
  backend:
